---
name: Code Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up environment
        uses: ./.github/actions/setup/poetry
        with:
          {% raw %}os: ${{ job.os }}{% endraw %}
          python-version: '{{ cookiecutter.python_version }}'
          poetry-install-options: "--with=test"
          poetry-export-options: "--with=test"

      - name: Run tests and generate coverage as test_integration.xml
        run: |
          poetry run pytest \
            --cov-report term \
            --cov-report xml:test_integration.xml \
            --cov=tests/test_integration

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          {% raw %}token: ${{ secrets.CODECOV_TOKEN }}{% endraw %}
          flags: test_integration
          files: ./test_integration.xml
          fail_ci_if_error: true
          verbose: true

  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up environment
        uses: ./.github/actions/setup/poetry
        with:
          {% raw %}os: ${{ job.os }}{% endraw %}
          python-version: '{{ cookiecutter.python_version }}'
          poetry-install-options: "--with=test"
          poetry-export-options: "--with=test"

      - name: Run tests and generate coverage as test_unit.xml
        run: |
          poetry run pytest \
            --cov-report term \
            --cov-report xml:test_unit.xml \
            --cov=tests/test_unit

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          {% raw %}token: ${{ secrets.CODECOV_TOKEN }}{% endraw %}
          flags: test_unit
          files: ./test_unit.xml
          fail_ci_if_error: true
          verbose: true
...
